### Request with host and port

GET http://localhost:8000/jarm?host=google.com&port=443

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Use default https port

GET http://localhost:8000/jarm?host=google.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### host is extracted from Url

GET http://localhost:8000/jarm?host=https://google.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
  client.assert(response.body.host === "google.com", "Host is not correctly extracted");
});
%}

### NGINX correctly redirect API calls

GET http://localhost:80/api/v1/jarm?host=google.com

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

### Error validation test

GET http://localhost:8000/jarm?host=google.com&port=wow

> {%
client.test("Port is invalid", function() {
  client.assert(response.status === 500, "Response status is not 500");  // TODO returns 400 instead
});
%}